- if flash[:alert]
  .alert.alert-danger.alert-dismissible{:role => "alert"}
    %button.close{"data-dismiss" => "alert", :type => "button"}
      %span{"aria-hidden" => "true"} &times;
      %span.sr-only Close
    %strong.h3.text-center= flash[:alert]
- if flash[:notice]
  .alert.alert-info.alert-dismissible{:role => "alert"}
    %button.close{"data-dismiss" => "alert", :type => "button"}
      %span{"aria-hidden" => "true"} &times;
      %span.sr-only Close
    %strong.h3.text-center= flash[:notice]
.row
  .col-md-6.text-center
    %h1= @board.name
    %h3.text-muted= @board.description
  .col-md-6.text-center
    .panel.panel-primary
      .panel-heading
        %h2 New Thread
      .panel-body
        = nested_form_for @new_threadd, url: new_threadd_path do |f|
          - @new_threadd.posts.build
          = f.text_field :name, :class => 'form-control', :placeholder => "Thread Name"
          = f.fields_for :posts do |p|
            = p.text_area :content, :class => 'form-control', :placeholder => "Your very insightful comment"
            = link_to "Formatting Help", markdown_help_path
            = p.file_field :image
          = recaptcha_tags(ajax: true)
          = f.submit "Create Thread", :class => 'btn btn-success'
%hr
- @threadds.each do |t|
  .row
    .col-md-12
      .panel.panel-info
        .panel-heading
          %a{:href => threadd_path(:id => t)}
            %h4
              %strong
                %span.text-success= t.id
                %span >
                %span= t.name
        .panel-body
          - if t.posts.empty?
          - else
            - if t.posts.first
              - if t.posts.first.image?
                .row.well-sm
                  .col-md-2
                    %a.pull-left{:href => t.posts.first.image.url}= image_tag t.posts.first.image.url(:thumb)
                  .col-md-10
                    %p
                      %span.text-success= t.posts.first.id
                      %span >
                      %span= t.posts.first.content
                - if t.posts.count == 1
                - else
                  %hr
              - else
                .row.well-sm
                  .col-md-10.col-md-offset-2
                    %p
                      %span.text-success= t.posts.first.id
                      %span >
                      %span= t.posts.first.content
                - if t.posts.count == 1
                - else
                  %hr
            - if t.posts.count == 1
            - elsif t.posts.count == 2
              - if t.posts.last.image?
                .row.well-sm
                  .col-md-2
                    %a.pull-left{:href => t.posts.last.image.url}= image_tag t.posts.last.image.url(:thumb)
                  .col-md-10
                    %p
                      %span.text-success= t.posts.last.id
                      %span >
                      %span= t.posts.last.content
              - else
                .row.well-sm
                  .col-md-10.col-md-offset-2
                    %p
                      %span.text-success= t.posts.last.id
                      %span >
                      %span= t.posts.last.content
            - else
              - t.posts.last(2).each do |p|
                - if p.image?
                  .row.well-sm
                    .col-md-2
                      %a.pull-left{:href => p.image.url}= image_tag p.image.url(:thumb)
                    .col-md-10
                      %p
                        %span.text-success= p.id
                        %span >
                        %span= markdown(p.content)
                  - if p === t.posts.last
                  - else
                    %hr
                - else
                  .row.well-sm
                    .col-md-10.col-md-offset-2
                      %p
                        %span.text-success= p.id
                        %span >
                        %span= markdown(p.content)
                  - if p === t.posts.last
                  - else
                    %hr
.row
  .col-md-12.text-center
    = will_paginate @threadds, renderer: BootstrapPagination::Rails
